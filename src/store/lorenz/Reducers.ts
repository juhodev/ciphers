import {
	LorenzState,
	LorenzActionTypes,
	SET_CAMS,
	SET_CAM,
	WheelCams,
	SET_WHEEL_POSITIONS,
	SetWheelPositionsAction,
} from './Types';
import update from 'immutability-helper';

const initialState: LorenzState = {
	wheelPositions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	camPositions: [
		[
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
		],
		[
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
		],
		[
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
		[
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
		[
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
		],
		[
			0,
			0,
			0b1,
			0,
			0,
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0,
			0b1,
			0b1,
			0,
			0,
			0,
			0b1,
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0b1,
			0b1,
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0,
			0,
			0,
		],
		[
			0b1,
			0,
			0,
			0,
			0b1,
			0,
			0b1,
			0b1,
			0b1,
			0b1,
			0b1,
			0,
			0,
			0,
			0b1,
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0b1,
			0b1,
			0b1,
			0b1,
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0b1,
			0b1,
			0b1,
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0b1,
			0,
			0b1,
			0b1,
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
		],
		[
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
		[
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
		],
		[
			0,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
		[
			0b1,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
		[
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
			0,
			0b1,
		],
	],
};

export default function lorenzReducer(
	state = initialState,
	action: LorenzActionTypes,
): LorenzState {
	switch (action.type) {
		case SET_CAMS:
			const camsPayload: WheelCams = action.payload as WheelCams;
			state.camPositions[camsPayload.wheel] = camsPayload.cams;
			return state;

		case SET_CAM:
			return update(state, {
				camPositions: {
					[action.payload[0]]: {
						[action.payload[1]]: { $set: action.payload[2] },
					},
				},
			});

		case SET_WHEEL_POSITIONS:
			return Object.assign({}, state, {
				wheelPositions: (action as SetWheelPositionsAction).payload,
			});

		default:
			return state;
	}
}
